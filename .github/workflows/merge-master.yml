permissions: read-all
name: Merge to Master

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  tag:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get commit message
        id: commit
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1 HEAD| tail -n 1)
          echo "Merge commit message pepito: $COMMIT_MSG"
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_OUTPUT
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          custom_release_rules: hotfix:patch:preminor,bug:patch:Bug Fixes,chore:patch:Refactor,feat:minor:Feature,fix:patch:Bug Fixes,docs:patch:Documentation,refactor:patch:Refactor,perf:patch:Performance Improvements,BREAKING:major:Breaking Changes,feature:minor:Feature
        if: startsWith(steps.commit.outputs.COMMIT_MSG, 'feat') || startsWith(steps.commit.outputs.COMMIT_MSG, 'feature') || startsWith(steps.commit.outputs.COMMIT_MSG, 'fix') || startsWith(steps.commit.outputs.COMMIT_MSG, 'bugfix') || startsWith(steps.commit.outputs.COMMIT_MSG, 'hotfix') || startsWith(steps.commit.outputs.COMMIT_MSG, 'BREAKING')
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
      commit: ${{ steps.commit.outputs.COMMIT_MSG }}
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: tag
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a Release Body
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: .github/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGELOG.md
        if: startsWith(needs.tag.outputs.commit, 'feat') || startsWith(needs.tag.outputs.commit, 'feature') || startsWith(needs.tag.outputs.commit, 'fix') || startsWith(needs.tag.outputs.commit, 'bugfix') || startsWith(needs.tag.outputs.commit, 'hotfix')  || startsWith(needs.tag.outputs.commit, 'BREAKING')
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.tag.outputs.tag }}
          name: Release ${{ needs.tag.outputs.tag}}
          generateReleaseNotes: true
          body: ${{ steps.git-cliff.outputs.content }}
        if: startsWith(needs.tag.outputs.commit, 'feat') || startsWith(needs.tag.outputs.commit, 'feature') || startsWith(needs.tag.outputs.commit, 'fix') || startsWith(needs.tag.outputs.commit, 'bugfix') || startsWith(needs.tag.outputs.commit, 'hotfix')  || startsWith(needs.tag.outputs.commit, 'BREAKING')
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        with:
          config: .github/cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
      - name: Add & Commit
        uses: EndBug/add-and-commit@v9.1.3
        with:
          message: "docs(CHANGELOG): Update changelog"
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          add: CHANGELOG.md
          push: false
      - name: Pushing to the protected branch 'protected'
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.PUSH_TO_PROTECTED_BRANCH }}
          branch: main
          unprotect_reviews: true
